{"ast":null,"code":"var _jsxFileName = \"/Users/kaninsrijundorn/Desktop/Project/jitpet/frontend_admin/src/components/ReactTable/ReactTable.js\";\n\n/*eslint-disable*/\nimport React from \"react\";\nimport { useTable, useFilters, useAsyncDebounce, useSortBy, usePagination } from \"react-table\";\nimport classnames from \"classnames\"; // A great library for fuzzy filtering/sorting items\n\nimport matchSorter from \"match-sorter\"; // react plugin used to create DropdownMenu for selecting items\n\nimport Select from \"react-select\"; // reactstrap components\n\nimport { Container, Row, Col, FormGroup, Input } from \"reactstrap\"; // Define a default UI for filtering\n\nfunction DefaultColumnFilter({\n  column: {\n    filterValue,\n    preFilteredRows,\n    setFilter\n  }\n}) {\n  const count = preFilteredRows.length;\n  return /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: `Search ${count} records...`,\n    type: \"text\",\n    onChange: e => {\n      setFilter(e.target.value || undefined); // Set undefined to remove the filter entirely\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction fuzzyTextFilterFn(rows, id, filterValue) {\n  return matchSorter(rows, filterValue, {\n    keys: [row => row.values[id]]\n  });\n} // Let the table remove the filter if the string is empty\n\n\nfuzzyTextFilterFn.autoRemove = val => !val; // Our table component\n\n\nfunction Table({\n  columns,\n  data\n}) {\n  const [numberOfRows, setNumberOfRows] = React.useState({\n    value: 10,\n    label: \"10 rows\"\n  });\n  const [pageSelect, handlePageSelect] = React.useState({\n    value: 0,\n    label: \"Page 1\"\n  });\n  const filterTypes = React.useMemo(() => ({\n    // Add a new fuzzyTextFilterFn filter type.\n    fuzzyText: fuzzyTextFilterFn,\n    // Or, override the default text filter to use\n    // \"startWith\"\n    text: (rows, id, filterValue) => {\n      return rows.filter(row => {\n        const rowValue = row.values[id];\n        return rowValue !== undefined ? String(rowValue).toLowerCase().startsWith(String(filterValue).toLowerCase()) : true;\n      });\n    }\n  }), []);\n  const defaultColumn = React.useMemo(() => ({\n    // Let's set up our default Filter UI\n    Filter: DefaultColumnFilter\n  }), []);\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    page,\n    prepareRow,\n    state,\n    visibleColumns,\n    nextPage,\n    pageOptions,\n    pageCount,\n    previousPage,\n    canPreviousPage,\n    canNextPage,\n    setPageSize,\n    gotoPage\n  } = useTable({\n    columns,\n    data,\n    defaultColumn,\n    // Be sure to pass the defaultColumn option\n    filterTypes,\n    initialState: {\n      pageSize: 10,\n      pageIndex: 0\n    }\n  }, useFilters, // useFilters!\n  useSortBy, usePagination); // We don't want to render all of the rows for this example, so cap\n  // it for this use case\n  // const firstPageRows = rows.slice(0, 10);\n\n  let pageSelectData = Array.apply(null, Array(pageOptions.length)).map(function () {});\n  let numberOfRowsData = [5, 10, 20, 25, 50, 100];\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ReactTable -striped -highlight primary-pagination\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pagination-top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"-pagination\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"-previous\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => previousPage(),\n    disabled: !canPreviousPage,\n    className: \"-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 15\n    }\n  }, \"Previous\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: \"4\",\n    sm: \"6\",\n    xs: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    className: \"react-select primary\",\n    classNamePrefix: \"react-select\",\n    name: \"pageSelect\",\n    value: pageSelect,\n    onChange: value => {\n      gotoPage(value.value);\n      handlePageSelect(value);\n    },\n    options: pageSelectData.map((prop, key) => {\n      return {\n        value: key,\n        label: \"Page \" + (key + 1)\n      };\n    }),\n    placeholder: \"Choose Page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: \"4\",\n    sm: \"6\",\n    xs: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    className: \"react-select primary\",\n    classNamePrefix: \"react-select\",\n    name: \"numberOfRows\",\n    value: numberOfRows,\n    onChange: value => {\n      setPageSize(value.value);\n      setNumberOfRows(value);\n    },\n    options: numberOfRowsData.map(prop => {\n      return {\n        value: prop,\n        label: prop + \" rows\"\n      };\n    }),\n    placeholder: \"Choose Rows\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 21\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"-next\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => nextPage(),\n    disabled: !canNextPage,\n    className: \"-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 15\n    }\n  }, \"Next\")))), /*#__PURE__*/React.createElement(\"table\", Object.assign({}, getTableProps(), {\n    className: \"rt-table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"thead\", {\n    className: \"rt-thead -header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 11\n    }\n  }, headerGroups.map(headerGroup => /*#__PURE__*/React.createElement(\"tr\", Object.assign({}, headerGroup.getHeaderGroupProps(), {\n    className: \"rt-tr\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 15\n    }\n  }), headerGroup.headers.map((column, key) => /*#__PURE__*/React.createElement(\"th\", Object.assign({}, column.getHeaderProps(column.getSortByToggleProps()), {\n    className: classnames(\"rt-th rt-resizable-header\", {\n      \"-cursor-pointer\": headerGroup.headers.length - 1 !== key,\n      \"-sort-asc\": column.isSorted && !column.isSortedDesc,\n      \"-sort-desc\": column.isSorted && column.isSortedDesc\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"rt-resizable-header-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 21\n    }\n  }, column.render(\"Header\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 21\n    }\n  }, headerGroup.headers.length - 1 === key ? null : column.canFilter ? column.render(\"Filter\") : null)))))), /*#__PURE__*/React.createElement(\"tbody\", Object.assign({}, getTableBodyProps(), {\n    className: \"rt-tbody\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 11\n    }\n  }), page.map((row, i) => {\n    prepareRow(row);\n    return /*#__PURE__*/React.createElement(\"tr\", Object.assign({}, row.getRowProps(), {\n      className: classnames(\"rt-tr\", {\n        \" -odd\": i % 2 === 0\n      }, {\n        \" -even\": i % 2 === 1\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 17\n      }\n    }), row.cells.map(cell => {\n      return /*#__PURE__*/React.createElement(\"td\", Object.assign({}, cell.getCellProps(), {\n        className: \"rt-td\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 23\n        }\n      }), cell.render(\"Cell\"));\n    }));\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pagination-bottom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 9\n    }\n  })));\n} // Define a custom filter filter function!\n\n\nfunction filterGreaterThan(rows, id, filterValue) {\n  return rows.filter(row => {\n    const rowValue = row.values[id];\n    return rowValue >= filterValue;\n  });\n} // This is an autoRemove method on the filter function that\n// when given the new filter value and returns true, the filter\n// will be automatically removed. Normally this is just an undefined\n// check, but here, we want to remove the filter if it's not a number\n\n\nfilterGreaterThan.autoRemove = val => typeof val !== \"number\";\n\nexport default Table;","map":{"version":3,"sources":["/Users/kaninsrijundorn/Desktop/Project/jitpet/frontend_admin/src/components/ReactTable/ReactTable.js"],"names":["React","useTable","useFilters","useAsyncDebounce","useSortBy","usePagination","classnames","matchSorter","Select","Container","Row","Col","FormGroup","Input","DefaultColumnFilter","column","filterValue","preFilteredRows","setFilter","count","length","e","target","value","undefined","fuzzyTextFilterFn","rows","id","keys","row","values","autoRemove","val","Table","columns","data","numberOfRows","setNumberOfRows","useState","label","pageSelect","handlePageSelect","filterTypes","useMemo","fuzzyText","text","filter","rowValue","String","toLowerCase","startsWith","defaultColumn","Filter","getTableProps","getTableBodyProps","headerGroups","page","prepareRow","state","visibleColumns","nextPage","pageOptions","pageCount","previousPage","canPreviousPage","canNextPage","setPageSize","gotoPage","initialState","pageSize","pageIndex","pageSelectData","Array","apply","map","numberOfRowsData","prop","key","headerGroup","getHeaderGroupProps","headers","getHeaderProps","getSortByToggleProps","isSorted","isSortedDesc","render","canFilter","i","getRowProps","cells","cell","getCellProps","filterGreaterThan"],"mappings":"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","sourcesContent":["/*eslint-disable*/\nimport React from \"react\";\nimport {\n  useTable,\n  useFilters,\n  useAsyncDebounce,\n  useSortBy,\n  usePagination,\n} from \"react-table\";\nimport classnames from \"classnames\";\n// A great library for fuzzy filtering/sorting items\nimport matchSorter from \"match-sorter\";\n// react plugin used to create DropdownMenu for selecting items\nimport Select from \"react-select\";\n\n// reactstrap components\nimport { Container, Row, Col, FormGroup, Input } from \"reactstrap\";\n\n// Define a default UI for filtering\nfunction DefaultColumnFilter({\n  column: { filterValue, preFilteredRows, setFilter },\n}) {\n  const count = preFilteredRows.length;\n\n  return (\n    <FormGroup>\n      <Input\n        placeholder={`Search ${count} records...`}\n        type=\"text\"\n        onChange={(e) => {\n          setFilter(e.target.value || undefined); // Set undefined to remove the filter entirely\n        }}\n      />\n    </FormGroup>\n  );\n}\n\nfunction fuzzyTextFilterFn(rows, id, filterValue) {\n  return matchSorter(rows, filterValue, { keys: [(row) => row.values[id]] });\n}\n\n// Let the table remove the filter if the string is empty\nfuzzyTextFilterFn.autoRemove = (val) => !val;\n\n// Our table component\nfunction Table({ columns, data }) {\n  const [numberOfRows, setNumberOfRows] = React.useState({\n    value: 10,\n    label: \"10 rows\",\n  });\n  const [pageSelect, handlePageSelect] = React.useState({\n    value: 0,\n    label: \"Page 1\",\n  });\n  const filterTypes = React.useMemo(\n    () => ({\n      // Add a new fuzzyTextFilterFn filter type.\n      fuzzyText: fuzzyTextFilterFn,\n      // Or, override the default text filter to use\n      // \"startWith\"\n      text: (rows, id, filterValue) => {\n        return rows.filter((row) => {\n          const rowValue = row.values[id];\n          return rowValue !== undefined\n            ? String(rowValue)\n                .toLowerCase()\n                .startsWith(String(filterValue).toLowerCase())\n            : true;\n        });\n      },\n    }),\n    []\n  );\n\n  const defaultColumn = React.useMemo(\n    () => ({\n      // Let's set up our default Filter UI\n      Filter: DefaultColumnFilter,\n    }),\n    []\n  );\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    page,\n    prepareRow,\n    state,\n    visibleColumns,\n    nextPage,\n    pageOptions,\n    pageCount,\n    previousPage,\n    canPreviousPage,\n    canNextPage,\n    setPageSize,\n    gotoPage,\n  } = useTable(\n    {\n      columns,\n      data,\n      defaultColumn, // Be sure to pass the defaultColumn option\n      filterTypes,\n      initialState: { pageSize: 10, pageIndex: 0 },\n    },\n    useFilters, // useFilters!\n    useSortBy,\n    usePagination\n  );\n\n  // We don't want to render all of the rows for this example, so cap\n  // it for this use case\n  // const firstPageRows = rows.slice(0, 10);\n  let pageSelectData = Array.apply(\n    null,\n    Array(pageOptions.length)\n  ).map(function () {});\n  let numberOfRowsData = [5, 10, 20, 25, 50, 100];\n  return (\n    <>\n      <div className=\"ReactTable -striped -highlight primary-pagination\">\n        <div className=\"pagination-top\">\n          <div className=\"-pagination\">\n            <div className=\"-previous\">\n              <button\n                type=\"button\"\n                onClick={() => previousPage()}\n                disabled={!canPreviousPage}\n                className=\"-btn\"\n              >\n                Previous\n              </button>\n            </div>\n            <div className=\"-center\">\n              <Container>\n                <Row className=\"justify-content-center\">\n                  <Col md=\"4\" sm=\"6\" xs=\"12\">\n                    <Select\n                      className=\"react-select primary\"\n                      classNamePrefix=\"react-select\"\n                      name=\"pageSelect\"\n                      value={pageSelect}\n                      onChange={(value) => {\n                        gotoPage(value.value);\n                        handlePageSelect(value);\n                      }}\n                      options={pageSelectData.map((prop, key) => {\n                        return {\n                          value: key,\n                          label: \"Page \" + (key + 1),\n                        };\n                      })}\n                      placeholder=\"Choose Page\"\n                    />\n                  </Col>\n                  <Col md=\"4\" sm=\"6\" xs=\"12\">\n                    <Select\n                      className=\"react-select primary\"\n                      classNamePrefix=\"react-select\"\n                      name=\"numberOfRows\"\n                      value={numberOfRows}\n                      onChange={(value) => {\n                        setPageSize(value.value);\n                        setNumberOfRows(value);\n                      }}\n                      options={numberOfRowsData.map((prop) => {\n                        return {\n                          value: prop,\n                          label: prop + \" rows\",\n                        };\n                      })}\n                      placeholder=\"Choose Rows\"\n                    />\n                  </Col>\n                </Row>\n              </Container>\n            </div>\n            <div className=\"-next\">\n              <button\n                type=\"button\"\n                onClick={() => nextPage()}\n                disabled={!canNextPage}\n                className=\"-btn\"\n              >\n                Next\n              </button>\n            </div>\n          </div>\n        </div>\n        <table {...getTableProps()} className=\"rt-table\">\n          <thead className=\"rt-thead -header\">\n            {headerGroups.map((headerGroup) => (\n              <tr {...headerGroup.getHeaderGroupProps()} className=\"rt-tr\">\n                {headerGroup.headers.map((column, key) => (\n                  <th\n                    {...column.getHeaderProps(column.getSortByToggleProps())}\n                    className={classnames(\"rt-th rt-resizable-header\", {\n                      \"-cursor-pointer\": headerGroup.headers.length - 1 !== key,\n                      \"-sort-asc\": column.isSorted && !column.isSortedDesc,\n                      \"-sort-desc\": column.isSorted && column.isSortedDesc,\n                    })}\n                  >\n                    <div className=\"rt-resizable-header-content\">\n                      {column.render(\"Header\")}\n                    </div>\n                    {/* Render the columns filter UI */}\n                    <div>\n                      {headerGroup.headers.length - 1 === key\n                        ? null\n                        : column.canFilter\n                        ? column.render(\"Filter\")\n                        : null}\n                    </div>\n                  </th>\n                ))}\n              </tr>\n            ))}\n          </thead>\n          <tbody {...getTableBodyProps()} className=\"rt-tbody\">\n            {page.map((row, i) => {\n              prepareRow(row);\n              return (\n                <tr\n                  {...row.getRowProps()}\n                  className={classnames(\n                    \"rt-tr\",\n                    { \" -odd\": i % 2 === 0 },\n                    { \" -even\": i % 2 === 1 }\n                  )}\n                >\n                  {row.cells.map((cell) => {\n                    return (\n                      <td {...cell.getCellProps()} className=\"rt-td\">\n                        {cell.render(\"Cell\")}\n                      </td>\n                    );\n                  })}\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n        <div className=\"pagination-bottom\"></div>\n      </div>\n    </>\n  );\n}\n\n// Define a custom filter filter function!\nfunction filterGreaterThan(rows, id, filterValue) {\n  return rows.filter((row) => {\n    const rowValue = row.values[id];\n    return rowValue >= filterValue;\n  });\n}\n\n// This is an autoRemove method on the filter function that\n// when given the new filter value and returns true, the filter\n// will be automatically removed. Normally this is just an undefined\n// check, but here, we want to remove the filter if it's not a number\nfilterGreaterThan.autoRemove = (val) => typeof val !== \"number\";\n\nexport default Table;\n"]},"metadata":{},"sourceType":"module"}