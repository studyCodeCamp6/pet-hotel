{"ast":null,"code":"import axios from 'axios';\nimport LocalStorageService from './services/LocalStorage';\nimport { notification } from 'antd';\naxios.defaults.baseURL = 'http://localhost:8000';\naxios.interceptors.request.use(config => {\n  if (config.url.includes('/login') || config.url.includes('/register')) return config;\n  const token = LocalStorageService.getToken();\n\n  if (token) {\n    config.headers['Authorization'] = `Bearer ${token}`;\n  }\n\n  return config;\n}, err => {\n  Promise.reject(err);\n});\naxios.interceptors.response.use(response => {\n  return response;\n}, err => {\n  var _err$response;\n\n  // console.log(err.response?.status)\n  // console.log(err.response)\n  if (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.status) === 401) {\n    //LocalStorageService.removeToken()\n    //window.location.reload()\n    notification.error({\n      message: 'Login again please'\n    });\n    return Promise.reject(err);\n  }\n\n  return Promise.reject(err);\n});\nexport default axios;","map":{"version":3,"sources":["/Users/kaninsrijundorn/Desktop/Project/jitpet/frontend_admin/src/axios.js"],"names":["axios","LocalStorageService","notification","defaults","baseURL","interceptors","request","use","config","url","includes","token","getToken","headers","err","Promise","reject","response","status","error","message"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,mBAAP,MAAgC,yBAAhC;AACA,SAASC,YAAT,QAA6B,MAA7B;AAEAF,KAAK,CAACG,QAAN,CAAeC,OAAf,GAAyB,uBAAzB;AACAJ,KAAK,CAACK,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CACGC,MAAD,IAAY;AACV,MAAIA,MAAM,CAACC,GAAP,CAAWC,QAAX,CAAoB,QAApB,KAAiCF,MAAM,CAACC,GAAP,CAAWC,QAAX,CAAoB,WAApB,CAArC,EACE,OAAOF,MAAP;AACF,QAAMG,KAAK,GAAGV,mBAAmB,CAACW,QAApB,EAAd;;AACA,MAAID,KAAJ,EAAW;AACTH,IAAAA,MAAM,CAACK,OAAP,CAAe,eAAf,IAAmC,UAASF,KAAM,EAAlD;AACD;;AACD,SAAOH,MAAP;AACD,CATH,EAUGM,GAAD,IAAS;AACPC,EAAAA,OAAO,CAACC,MAAR,CAAeF,GAAf;AACD,CAZH;AAeAd,KAAK,CAACK,YAAN,CAAmBY,QAAnB,CAA4BV,GAA5B,CACGU,QAAD,IAAc;AACZ,SAAOA,QAAP;AACD,CAHH,EAIGH,GAAD,IAAS;AAAA;;AACP;AACA;AACA,MAAI,kBAAAA,GAAG,CAACG,QAAJ,gEAAcC,MAAd,MAAyB,GAA7B,EAAkC;AAChC;AACA;AACAhB,IAAAA,YAAY,CAACiB,KAAb,CAAmB;AACjBC,MAAAA,OAAO,EAAE;AADQ,KAAnB;AAGA,WAAOL,OAAO,CAACC,MAAR,CAAeF,GAAf,CAAP;AACD;;AACD,SAAOC,OAAO,CAACC,MAAR,CAAeF,GAAf,CAAP;AACD,CAhBH;AAmBA,eAAed,KAAf","sourcesContent":["import axios from 'axios';\nimport LocalStorageService from './services/LocalStorage';\nimport { notification } from 'antd';\n\naxios.defaults.baseURL = 'http://localhost:8000';\naxios.interceptors.request.use(\n  (config) => {\n    if (config.url.includes('/login') || config.url.includes('/register'))\n      return config;\n    const token = LocalStorageService.getToken();\n    if (token) {\n      config.headers['Authorization'] = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (err) => {\n    Promise.reject(err);\n  }\n);\n\naxios.interceptors.response.use(\n  (response) => {\n    return response;\n  },\n  (err) => {\n    // console.log(err.response?.status)\n    // console.log(err.response)\n    if (err.response?.status === 401) {\n      //LocalStorageService.removeToken()\n      //window.location.reload()\n      notification.error({\n        message: 'Login again please',\n      });\n      return Promise.reject(err);\n    }\n    return Promise.reject(err);\n  }\n);\n\nexport default axios;\n"]},"metadata":{},"sourceType":"module"}