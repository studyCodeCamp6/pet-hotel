{"ast":null,"code":"import React, { useState, useEffect } from 'react';\nimport LocalStorageService from '../../services/localStorageService';\nimport jwtDecode from 'jwt-decode';\nimport axios from '../../axios';\nexport const ConsumerList = () => {\n  const [consumer, setConsumer] = useState([]);\n\n  const fetchProvider = async () => {\n    const httpResponse = await axios.get('/histories/customers');\n    setProvider(httpResponse.data);\n  };\n\n  useEffect(() => {\n    const token = LocalStorageService.getToken();\n    fetchProvider();\n\n    if (token) {\n      const user = jwtDecode(token);\n    }\n  }, []);\n};","map":{"version":3,"sources":["/Users/kaninsrijundorn/Desktop/Project/jitpet/frontend_admin/src/components/History/Consumer.js"],"names":["React","useState","useEffect","LocalStorageService","jwtDecode","axios","ConsumerList","consumer","setConsumer","fetchProvider","httpResponse","get","setProvider","data","token","getToken","user"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,mBAAP,MAAgC,oCAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAEA,OAAO,MAAMC,YAAY,GAAG,MAAM;AAChC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;;AAEA,QAAMQ,aAAa,GAAG,YAAY;AAChC,UAAMC,YAAY,GAAG,MAAML,KAAK,CAACM,GAAN,CAAU,sBAAV,CAA3B;AAEAC,IAAAA,WAAW,CAACF,YAAY,CAACG,IAAd,CAAX;AACD,GAJD;;AAMAX,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMY,KAAK,GAAGX,mBAAmB,CAACY,QAApB,EAAd;AACAN,IAAAA,aAAa;;AACb,QAAIK,KAAJ,EAAW;AACT,YAAME,IAAI,GAAGZ,SAAS,CAACU,KAAD,CAAtB;AACD;AACF,GANQ,EAMN,EANM,CAAT;AAOD,CAhBM","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport LocalStorageService from '../../services/localStorageService';\nimport jwtDecode from 'jwt-decode';\nimport axios from '../../axios';\n\nexport const ConsumerList = () => {\n  const [consumer, setConsumer] = useState([]);\n\n  const fetchProvider = async () => {\n    const httpResponse = await axios.get('/histories/customers');\n\n    setProvider(httpResponse.data);\n  };\n\n  useEffect(() => {\n    const token = LocalStorageService.getToken();\n    fetchProvider();\n    if (token) {\n      const user = jwtDecode(token);\n    }\n  }, []);\n};\n"]},"metadata":{},"sourceType":"module"}